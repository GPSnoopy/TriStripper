cmake_minimum_required(VERSION 3.10)

project(TriStripper.All)

# On Linux, default to Release if not specified.
if (UNIX AND NOT CMAKE_BUILD_TYPE)
	set(CMAKE_BUILD_TYPE "Release" CACHE STRING "Specifies the build type on single-configuration generators" FORCE)
endif ()

set(CMAKE_DEBUG_POSTFIX d)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/bin)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/bin)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/lib)

if (WIN32)

	add_definitions(-DUNICODE -D_UNICODE)
	add_definitions(-DWIN32_LEAN_AND_MEAN)
	
	foreach (flag_var CMAKE_CXX_FLAGS CMAKE_CXX_FLAGS_DEBUG CMAKE_CXX_FLAGS_RELEASE CMAKE_CXX_FLAGS_MINSIZEREL CMAKE_CXX_FLAGS_RELWITHDEBINFO)
		if (${flag_var} MATCHES "/MD")
			string(REGEX REPLACE "/MD" "/MT" ${flag_var} "${${flag_var}}")
		endif()
	endforeach()
	
	add_compile_options("/std:c++17")
	add_compile_options("/MP")
	
endif()

if (UNIX)
	
	add_definitions(-DUNIX)
	add_compile_options("-std=c++1z")
	add_compile_options("-Wall")
	add_compile_options("-fvisibility=hidden")

endif ()

find_package(OpenGL REQUIRED)
find_package(GLUT REQUIRED)

add_subdirectory(src)
add_subdirectory(test)
set_property (DIRECTORY PROPERTY VS_STARTUP_PROJECT "TriStripper.Test")
